{"version":3,"sources":["assets/images/1551511784_4.jpg","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileContacts/ProfileContacts.jsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","React","memo","text","likeCount","className","css","post__img","src","alt","count","minLength2","minLength","maxLength15","maxLength","mapDispatchToProps","addPostActionCreator","connect","state","profilePage","newPostData","postData","map","item","key","id","ReduxSendPostForm","reduxForm","form","handleSubmit","onSubmit","Field","validate","required","name","component","Textarea","placeholder","head","data","post","ProfileStatus","props","classes","makeStyles","theme","button","margin","spacing","useStyles","isOwner","savePhoto","useState","editMode","setEditMode","status","setStatus","useEffect","style","marginTop","width","profile","photos","large","userPhoto","accept","onChange","e","target","files","length","display","multiple","type","htmlFor","Button","variant","color","startIcon","onDoubleClick","autoFocus","onBlur","updateStatusThunkCreator","defaultValue","value","ProfileContacts","contacts","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","setContactEditMode","console","log","facebook","website","vk","twitter","instagram","github","mainLink","youtube","onClick","cursor","ProfileDataReduxForm","error","createField","Input","Alert","severity","ProfileInfo","profileInfo","Preloader","usersStatus","initialValues","setProfileInfo","then","InnerProfile","content","MyPostsContainer","ProfileContainer","this","match","params","userId","isAuthed","history","push","authorisedUsersId","setState","getProfileThunkCreator","getStatusThunkCreator","prevProps","usersProfile","Component","compose","usersPage","auth","withRouter"],"mappings":"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","file":"static/js/4.5925b562.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1551511784_4.aec17f7e.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__13V_J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"MyPosts_head__CWF5u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post__img\":\"Post_post__img__1ngWY\",\"count\":\"Post_count__323HV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__3-UGW\"};","import React from \"react\";\r\nimport css from \"./Post.module.css\";\r\n\r\nconst Post =React.memo(\r\n  ({text, likeCount}) => {\r\n    \r\n    return (\r\n      <div>\r\n        \r\n        <img\r\n          className={`${css.post__img}  rounded-circle`}\r\n          src=\"https://hunyadi.info.hu/levente/images/stories/boxplus/image3.jpg\"\r\n          alt=\"\"\r\n        />\r\n        <div>{text}</div>\r\n        <div>\r\n          <span className={css.count}>{likeCount} </span> Likes\r\n        </div>\r\n        <hr/>\r\n      </div>\r\n    );\r\n  }\r\n  ) \r\nexport default Post;\r\n","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nimport css from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormControls/FormsControls\";\r\nimport {\r\n  required,\r\n  minLength,\r\n  maxLength,\r\n} from \"../../../utils/validators/validators\";\r\n\r\nconst minLength2 = minLength(2);\r\nconst maxLength15 = maxLength(15);\r\n\r\nconst MyPosts =  ({state,addPostActionCreator} ) => {\r\n  \r\n\r\n  const { postData } = state;\r\n\r\n  let newPostData = postData.map((item) => (\r\n    <Post key={item.id} likeCount={item.likeCount} text={item.text} />\r\n  ));\r\n\r\n  \r\n\r\n  const SendPostForm = ({handleSubmit}) => {\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <Field\r\n          className=\"form-control form-group\"\r\n          validate={[required, minLength2, maxLength15]}\r\n          name=\"post\"\r\n          component={Textarea}\r\n          placeholder=\"Add Post\"\r\n        />\r\n        <button className=\"btn btn-primary\">Add Post</button>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const ReduxSendPostForm = reduxForm({\r\n    form: \"sendPost\",\r\n  })(SendPostForm);\r\n\r\n  const SendPost = (data) => {\r\n    addPostActionCreator(data.post);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={`${css.head}`}>Posts:</div>\r\n      <div>{newPostData}</div>\r\n      <div className={`${css.head}`}>Send Post:</div>\r\n      <ReduxSendPostForm onSubmit={SendPost} />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    state: state.profilePage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = {\r\n  addPostActionCreator,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport userPhoto from \"../../../../assets/images/1551511784_4.jpg\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\n\r\n\r\n const ProfileStatus = (props) => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const {isOwner, savePhoto } = props;\r\n\r\n\r\n  //STATE HOOKS\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n\r\n  // EFFECT HOOKS\r\n  useEffect(() => {\r\n    // effect\r\n    setStatus(props.status);\r\n  }, [\r\n    props.status\r\n  ]);\r\n\r\n  \r\n\r\n  // CallBacks\r\n  const onInputChange = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deActivateEditMode = () => {\r\n    props.updateStatusThunkCreator(status, props.id);\r\n    setEditMode(false);\r\n  };\r\n\r\n  const fileUpload = (e) => {\r\n\r\n    \r\n    if (e.target.files.length) {\r\n      \r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img\r\n          style={{ marginTop: \"10px\", width: \"160px\" }}\r\n          src={props.profile.photos.large || userPhoto}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      {isOwner && (\r\n        <div>\r\n          <input\r\n            accept=\"image/*\"\r\n            onChange={fileUpload}\r\n            style={{ display: \"none\" }}\r\n            id=\"raised-button-file\"\r\n            multiple\r\n            type=\"file\"\r\n          />\r\n          <label htmlFor=\"raised-button-file\">\r\n            <Button\r\n              component=\"span\"\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<CloudUploadIcon />}\r\n            >\r\n              Upload\r\n            </Button>\r\n          </label>\r\n         \r\n        </div>\r\n      )}\r\n      \r\n      <div>\r\n        <div>\r\n          {!editMode && (\r\n            <div>\r\n              <span onDoubleClick={activateEditMode}>\r\n                {props.status && <><b>Status</b>: {props.status}</>}\r\n              </span>\r\n            </div>\r\n          )}\r\n\r\n          {editMode && (\r\n            <div>\r\n              <input\r\n                autoFocus={true}\r\n                onBlur={deActivateEditMode}\r\n                type=\"text\"\r\n                defaultValue={status}\r\n                onChange={onInputChange}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileStatus","import React from 'react'\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\n\r\nexport default function ProfileContacts({profile:{contacts,fullName,aboutMe,lookingForAJob,lookingForAJobDescription} , isOwner, setContactEditMode }) {\r\n  console.log(contacts);\r\n  \r\n   return (\r\n      <div>\r\n        \r\n        <div>\r\n          <div>{fullName && <><b>I am</b> : {fullName}</>}</div>\r\n          <div>{aboutMe &&<><b>About me </b>: {aboutMe}</>}</div>\r\n        </div>\r\n        <div className=\"workState\">\r\n          <div className=\"job\"> <b>Work status: </b>{!lookingForAJob ?  'looking for a job' : 'I am working'}</div>\r\n          <div className=\"jobDescription\"><b>Job Description</b> : {lookingForAJobDescription}</div>\r\n        </div>\r\n\r\n        <div className=\"contacts\">\r\n          <div ><FacebookIcon/> {contacts.facebook ? contacts.facebook : '-no info'}</div>\r\n          <div ><LanguageIcon/> {contacts.website  ? contacts.website : '-no info'}</div>\r\n          <div ><b>VK</b>: {contacts.vk  ? contacts.vk : '-no info'}</div>\r\n          <div ><TwitterIcon/> {contacts.twitter  ? contacts.twitter : '-no info'}</div>\r\n          <div ><InstagramIcon/> {contacts.instagram  ? contacts.instagram : '-no info'}</div>\r\n          <div ><GitHubIcon/> {contacts.github  ? contacts.github : '-no info'}</div>\r\n          <div ><b>mainLink</b> : {contacts.mainLink  ? contacts.mainLink : '-no info'}</div>\r\n          <div ><YouTubeIcon/> {contacts.youtube  ? contacts.youtube : '-no info'}</div>\r\n        </div>\r\n\r\n        \r\n        {isOwner && <Button variant=\"contained\" color=\"secondary\" onClick={()=> setContactEditMode(true) } style={{cursor:'pointer'}}><EditIcon /> <b>Edit Info</b></Button> }\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { Input , createField, Textarea} from '../../../common/FormControls/FormsControls';\r\nimport { reduxForm} from 'redux-form';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\n\r\n function ProfileDataForm(props) {\r\n\r\n   const {handleSubmit,error} = props\r\n   \r\n\r\n   return (\r\n      // userId: required(integer)\r\n     \r\n      \r\n      // contacts: required(object)\r\n      // className,type,name,component,props\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        \r\n        <div>\r\n        \r\n          <div><b>I am</b> : {createField(\"form-control\",\"text\",\"fullName\",Input,{placeholder:  \"Full Name\" })}</div>\r\n          <div><b>About me </b>: {createField(\"form-control\",\"text\",\"aboutMe\",Textarea,{placeholder: 'About Me' })}</div>\r\n        </div>\r\n\r\n        <div className=\"contacts\">\r\n          <div ><FacebookIcon/> {createField(\"form-control\",\"text\",\"contacts.facebook\",Input,{placeholder: 'facebook' })}</div>\r\n          <div ><LanguageIcon/> {createField(\"form-control\",\"text\",\"contacts.website\",Input,{placeholder: 'website' })}</div>\r\n          <div ><b>VK</b>: {createField(\"form-control\",\"text\",\"contacts.vk\",Input,{placeholder: 'vk' })}</div>\r\n          <div ><TwitterIcon/> {createField(\"form-control\",\"text\",\"contacts.twitter\",Input,{placeholder: 'twitter' })}</div>\r\n          <div ><InstagramIcon/> {createField(\"form-control\",\"text\",\"contacts.instagram\",Input,{placeholder: 'instagram' })}</div>\r\n          <div ><GitHubIcon/> {createField(\"form-control\",\"text\",\"contacts.github\",Input,{placeholder: 'github' })}</div>\r\n          <div ><b>mainLink</b> : {createField(\"form-control\",\"text\",\"contacts.mainLink\",Input,{placeholder: 'mainLink' })}</div>\r\n          <div ><YouTubeIcon/> {createField(\"form-control\",\"text\",\"contacts.youtube\",Input,{placeholder: 'youtube' })}</div>\r\n        </div>\r\n\r\n        <div className=\"workState\">\r\n          <div className=\"job\"> <b>Work status: </b>{createField(\"form-check-label\",\"checkbox\",\"lookingForAJob\",Input)}</div>\r\n          <div className=\"jobDescription\">Job skills: {createField(\"form-control\",\"text\",\"lookingForAJobDescription\",Textarea,{placeholder: 'job skills' })}</div>\r\n        </div>\r\n   {error && <Alert severity=\"error\">{error}</Alert>}\r\n        <Button type='submit' variant=\"contained\" color=\"secondary\" onClick={()=>{}}>Save</Button>\r\n      </form>\r\n   )\r\n}\r\nconst ProfileDataReduxForm = reduxForm({form: \"profile-form\" })(ProfileDataForm);\r\n\r\n export default ProfileDataReduxForm","import React, { useState } from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport css from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileContacts from \"./ProfileContacts/ProfileContacts\";\r\nimport ProfileDataReduxForm from \"./ProfileDataForm/ProfileDataForm\";\r\n\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n  const [editMode, setContactEditMode] = useState(false)\r\n  const { profile } = props;\r\n\r\n  \r\n\r\n  return (\r\n    <div className={css.profileInfo}>\r\n      <img\r\n        src=\"https://www.imgacademy.com/themes/custom/imgacademy/images/helpbox-contact.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <div>\r\n        {profile === null ? \r\n        (<Preloader />) \r\n        : \r\n        (<>\r\n        \r\n        <ProfileStatus  status={props.usersStatus} {...props}/> \r\n        {editMode\r\n\r\n        ? \r\n        <ProfileDataReduxForm initialValues = {profile} onSubmit={\r\n          (data)=>{\r\n          \r\n          props.setProfileInfo(data)\r\n          .then(()=> {setContactEditMode(false)})\r\n          \r\n        }} {...props}   profile={profile}/> \r\n        : \r\n        <ProfileContacts \r\n          setContactEditMode={setContactEditMode} \r\n          {...props}   \r\n          profile={profile}/>}\r\n        </>)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport css from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProfileThunkCreator, getStatusThunkCreator, updateStatusThunkCreator, savePhoto,setProfileInfo } from \"../../redux/profile-reducer\";\r\nimport { withRouter} from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nlet InnerProfile = (props) => {\r\n    return (<div className={css.content}>\r\n                <ProfileInfo  {...props} profile={props.profile} /> \r\n                 <MyPostsContainer {...props} profile={props.profile} />\r\n            </div>)\r\n}\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n  \r\n  state = {\r\n    id: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    // в props приходит вся информация из URL(match,location,history,staticContext) и из connect\r\n    // делаем логику если мы заходим в Profile  без id:\r\n    let id = +this.props.match.params.userId;\r\n\r\n    if(!id) {\r\n      if(!this.props.isAuthed){\r\n        this.props.history.push('/login')\r\n      }\r\n      id =+this.props.authorisedUsersId\r\n    }\r\n    this.setState({id});\r\n    this.props.getProfileThunkCreator(id);\r\n    this.props.getStatusThunkCreator(id);\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(prevProps.match.params.userId !== this.props.match.params.userId){\r\n     let id =+this.props.authorisedUsersId \r\n      this.props.getProfileThunkCreator(id);\r\n    }\r\n    \r\n\r\n  }\r\n  \r\n  render() {       \r\n      return  <InnerProfile isOwner = {!this.props.match.params.userId} id={this.state.id} {...this.props} profile={this.props.usersProfile}/>    \r\n  }\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  usersProfile: state.profilePage.usersProfile,\r\n  usersPage: state.profilePage,\r\n  usersStatus: state.profilePage.status,\r\n  authorisedUsersId: state.auth.id,\r\n  isAuthed: state.auth.isAuthed\r\n\r\n});\r\n\r\n export default compose (\r\n    connect(mapStateToProps, { \r\n      getProfileThunkCreator,\r\n      getStatusThunkCreator, \r\n      updateStatusThunkCreator,\r\n      savePhoto,setProfileInfo }),\r\n    withRouter\r\n )(ProfileContainer) "],"sourceRoot":""}